{"code":"import { useCallback, useState } from \"react\";\r\nconst useSetState = (initialState = {}) => {\r\n    const [state, set] = useState(initialState);\r\n    const setState = useCallback((patch) => {\r\n        set((prevState) => Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch));\r\n    }, [set]);\r\n    return [state, setState];\r\n};\r\nexport default useSetState;\r\n","references":["/Users/liangdong/Desktop/hook/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/liangdong/Desktop/hook/useSetState/index.d.ts","writeByteOrderMark":false,"text":"declare const useSetState: <T extends object>(initialState?: T) => [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void];\r\nexport default useSetState;\r\n"}}
