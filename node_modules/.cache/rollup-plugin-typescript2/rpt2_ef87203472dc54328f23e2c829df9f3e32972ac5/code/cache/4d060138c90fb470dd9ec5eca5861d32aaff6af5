{"code":"import { useCallback, useState } from \"react\";\r\nvar useSetState = function (initialState) {\r\n    if (initialState === void 0) { initialState = {}; }\r\n    var _a = useState(initialState), state = _a[0], set = _a[1];\r\n    var setState = useCallback(function (patch) {\r\n        set(function (prevState) {\r\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\r\n        });\r\n    }, [set]);\r\n    return [state, setState];\r\n};\r\nexport default useSetState;\r\n","references":["/Users/liangdong/Desktop/hook/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/liangdong/Desktop/hook/useSetState/index.d.ts","writeByteOrderMark":false,"text":"declare const useSetState: <T extends object>(initialState?: T) => [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void];\r\nexport default useSetState;\r\n"}}
